name: Fastapi CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'    
    # Step-2 Install Python Virtual ENV
    - name: Install Python Virtual ENV
      run: pip3 install virtualenv

    # Step-3 Setup Virtual ENV
    # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
    - name:  Virtual ENV
      uses: actions/cache@v2
      id: cache-venv # name for referring later
      with:
        path: venv # what we cache: the Virtual ENV
        # The cache key depends on requirements.txt
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    # Step-4 Build a Virtual ENV, but only if it doesn't already exist
    - name: Activate Virtual ENV
      run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
      # if: steps.cache-venv.outputs.cache-hit != 'true'

    - name: Install cryptography
      run : pip install \
            --platform manylinux2014_x86_64 \
            --implementation cp \
            --python 3.9 \
            --target=build/package \
            cryptography==38.0.3
      
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8
    
    - name: Run Tests
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions doesn't preserve the environment
      run: . venv/bin/activate
    - name: Create archive of dependencies
      run: |
        cd ./venv/lib/python3.9/site-packages
        zip -r9 ../../../../app.zip .

    - name: Add API files to Zip file
      run: cd ./src && zip -g ../app.zip -r .
    - name: Upload zip file artifact
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: app.zip
  
  cd:
    runs-on: ubuntu-latest
    needs: [ci]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda app.zip
        uses: actions/download-artifact@v2
        with:
          name: app 
      - name: Upload to S3
        run: aws s3 cp app.zip s3://fastapi-aws-lambda/app.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapi-user-2023-sg --s3-bucket fastapi-aws-lambda --s3-key app.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}